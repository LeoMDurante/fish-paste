wd[which(wd$Bty_Mean > -1),]$DEPTH_BIN<-"ONEM" # not samplable
wd[which(wd$Bty_Mean >= -6 & wd$Bty_Mean < -1),]$DEPTH_BIN<-"SHAL"
wd[which(wd$Bty_Mean >= -18 & wd$Bty_Mean < -6),]$DEPTH_BIN<-"MIDD"
wd[which(wd$Bty_Mean >= -30 & wd$Bty_Mean < -18),]$DEPTH_BIN<-"DEEP"
wd[which(wd$Bty_Mean < -30),]$DEPTH_BIN<-"MESO"
wd[which(wd$Bty_Mean >= 0),]$DEPTH_BIN<-"LAND"
wd[is.na(wd$Bty_Mean),]
table(wd$DEPTH_BIN, wd$Hard_Per)
if("Hard_Per" %in% colnames(wd)){
#Change hard and soft and unknown per to be proportion of not land
if("Hard_Per" %in% colnames(wd)){
nl<-which(wd$Land_Per<100)
wd$NOT_LAND<-(100-wd$Land_Per)/100
wd[nl, c("Hard_Per", "Unk_Per", "Soft_Per")]<-wd[nl, c("Hard_Per", "Unk_Per", "Soft_Per")]/wd[nl, ]$NOT_LAND
}
# create fields for hard soft
wd$HARD_50<-wd$HARD_10<-"MISSING"
## HARD_1O set to "H" if hard >= 10%, otherwise set to whatever is higher of soft or unknown
table(wd$Hard_Per)
h<-which(wd$Hard_Per>=10); 	if (length(h)>0)	 	wd[h,]$HARD_10<-"H"
s<-which(wd$HARD_10=="MISSING" & wd$Soft_Per>=wd$Unk_Per); 	if (length(s)>0)		 	wd[s,]$HARD_10<-"S"
u<-which(wd$HARD_10=="MISSING" & wd$Unk_Per>wd$Soft_Per); 	if (length(u)>0)	 		wd[u,]$HARD_10<-"U"
table(wd$HARD_10)
## HARD_50 sets to Unknown if > 50% Unkown .. otherwise set to majority of hard/soft
u<-which(wd$Unk_Per>50); 	if (length(u)>0)	 	wd[u,]$HARD_50<-"U"
s<-which(wd$HARD_50=="MISSING" & wd$Soft_Per>wd$Hard_Per); 	if (length(s)>0)	 	wd[s,]$HARD_50<-"S"
h<-which(wd$HARD_50=="MISSING" & wd$Hard_Per>=wd$Soft_Per); 	if (length(h)>0)	 	wd[h,]$HARD_50<-"H"
table(wd$HARD_50)
} else {
# No hard/soft information
wd$HARD_10<-wd$HARD_50<-"U"
}
if(INDEX %in% c(101, 108, 109, 110)){
wd$ZONE_CODE<-"FRF"
} else {
RZ_NAMES<-c("RZ_FRF_Per", "RZ_BRF_Per", "RZ_LAG_Per", "RZ_RCF_Per", "RZ_PRS_Per", "RZ_LND_Per", "RZ_UNK_Per")
wd$MAX_POS<-apply(wd[,RZ_NAMES],1,which.max)
RZONES<-c("FRF", "BRF", "LAG", "RCF", "PRS", "LND", "UNK")
wd$ZONE_CODE<-as.factor(wd$MAX_POS)
levels(wd$ZONE_CODE)<-RZONES[sort(unique(wd$MAX_POS))]
table(wd$ZONE_CODE, wd$MAX_POS)
wd$MAX_POS<-NULL
}
GRIDFILES<-read.csv("X:/GIS/Projects/CommonMaps/MARI/GUA/gua_50m_grid_for_script.csv")
INDEX<-1
gridf<-GRIDFILES[INDEX]
View(gridf)
orig.wd<-read.csv("X:/GIS/Projects/CommonMaps/MARI/GUA/gua_50m_grid_for_script.csv")
RZ_NAMES<-c("RZ_FRF_Per", "RZ_BRF_Per", "RZ_LAG_Per", "RZ_RCF_Per", "RZ_PRS_Per", "RZ_LND_Per", "RZ_UNK_Per")
wd$MAX_POS<-apply(wd[,RZ_NAMES],1,which.max)
RZONES<-c("FRF", "BRF", "LAG", "RCF", "PRS", "LND", "UNK")
wd$ZONE_CODE<-as.factor(wd$MAX_POS)
levels(wd$ZONE_CODE)<-RZONES[sort(unique(wd$MAX_POS))]
table(wd$ZONE_CODE, wd$MAX_POS)
wd$MAX_POS<-NULL
head(wd)
wd$LND<-0
if("Land_Per" %in% colnames(wd)){
wd$LND<-wd$Land_Per
} else {
wd$LND<-wd$RZ_LND_Per
}
if(max(wd$LND)>50){
##Set anything to Land if Land_Per is > 50%
wd[which(wd$LND>50),]$DEPTH_BIN<-"LAND"
wd[which(wd$LND>50),]$HARD_10<-"L"
wd[which(wd$LND>50),]$HARD_50<-"L"
wd[which(wd$LND>50),]$ZONE_CODE<-"LND"
}
wd$LND<-NULL
wd.out<-merge(orig.wd, wd[,c("OBJECTID", "DEPTH_BIN", "HARD_10", "HARD_50", "ZONE_CODE")], by="OBJECTID", all.x=T)
colnames(wd)
wd<-write.csv("X:/GIS/Projects/CommonMaps/MARI/GUA/KSM_gua_50_grid_table.csv")
wd<-write.csv(wd,file="X:/GIS/Projects/CommonMaps/MARI/GUA/KSM_gua_50_grid_table.csv")
wd<-read.csv("X:/GIS/Projects/CommonMaps/MARI/GUA/gua_50m_grid_for_script.csv")
head(wd)
summary(wd)
# create a field for depth bin
wd$DEPTH_BIN<-"MISSING"
wd[is.na(wd$Bty_Mean),]$DEPTH_BIN<-"UNKN"
# label depth ranges on mean bathy value
wd[which(wd$Bty_Mean > -1),]$DEPTH_BIN<-"ONEM" # not samplable
wd[which(wd$Bty_Mean >= -6 & wd$Bty_Mean < -1),]$DEPTH_BIN<-"SHAL"
wd[which(wd$Bty_Mean >= -18 & wd$Bty_Mean < -6),]$DEPTH_BIN<-"MIDD"
wd[which(wd$Bty_Mean >= -30 & wd$Bty_Mean < -18),]$DEPTH_BIN<-"DEEP"
wd[which(wd$Bty_Mean < -30),]$DEPTH_BIN<-"MESO"
# not all grids have this, but some have values of 1
wd[which(wd$Bty_Mean >= 0),]$DEPTH_BIN<-"LAND"
table(wd$DEPTH_BIN, wd$Hard_Per)
if("Hard_Per" %in% colnames(wd)){
#Change hard and soft and unknown per to be proportion of not land
if("Hard_Per" %in% colnames(wd)){
nl<-which(wd$Land_Per<100)
wd$NOT_LAND<-(100-wd$Land_Per)/100
wd[nl, c("Hard_Per", "Unk_Per", "Soft_Per")]<-wd[nl, c("Hard_Per", "Unk_Per", "Soft_Per")]/wd[nl, ]$NOT_LAND
}
# create fields for hard soft
wd$HARD_50<-wd$HARD_10<-"MISSING"
## HARD_1O set to "H" if hard >= 10%, otherwise set to whatever is higher of soft or unknown
table(wd$Hard_Per)
h<-which(wd$Hard_Per>=10); 	if (length(h)>0)	 	wd[h,]$HARD_10<-"H"
s<-which(wd$HARD_10=="MISSING" & wd$Soft_Per>=wd$Unk_Per); 	if (length(s)>0)		 	wd[s,]$HARD_10<-"S"
u<-which(wd$HARD_10=="MISSING" & wd$Unk_Per>wd$Soft_Per); 	if (length(u)>0)	 		wd[u,]$HARD_10<-"U"
table(wd$HARD_10)
## HARD_50 sets to Unknown if > 50% Unkown .. otherwise set to majority of hard/soft
u<-which(wd$Unk_Per>50); 	if (length(u)>0)	 	wd[u,]$HARD_50<-"U"
s<-which(wd$HARD_50=="MISSING" & wd$Soft_Per>wd$Hard_Per); 	if (length(s)>0)	 	wd[s,]$HARD_50<-"S"
h<-which(wd$HARD_50=="MISSING" & wd$Hard_Per>=wd$Soft_Per); 	if (length(h)>0)	 	wd[h,]$HARD_50<-"H"
table(wd$HARD_50)
} else {
# No hard/soft information
wd$HARD_10<-wd$HARD_50<-"U"
}
# add reef zone field - whatever is largest
# if(INDEX %in% c(101, 108, 109, 110)){
# 	wd$ZONE_CODE<-"FRF"
# } else {
RZ_NAMES<-c("RZ_FRF_Per", "RZ_BRF_Per", "RZ_LAG_Per", "RZ_RCF_Per", "RZ_PRS_Per", "RZ_LND_Per", "RZ_UNK_Per")
wd$MAX_POS<-apply(wd[,RZ_NAMES],1,which.max)
RZONES<-c("FRF", "BRF", "LAG", "RCF", "PRS", "LND", "UNK")
wd$ZONE_CODE<-as.factor(wd$MAX_POS)
levels(wd$ZONE_CODE)<-RZONES[sort(unique(wd$MAX_POS))]
table(wd$ZONE_CODE, wd$MAX_POS)
wd$MAX_POS<-NULL
# }
#set all grid cells with >50% LND to LAND
#first create a column for Land% - from the 2 fields that might be in the datafile
wd$LND<-0
if("Land_Per" %in% colnames(wd)){
wd$LND<-wd$Land_Per
} else {
wd$LND<-wd$RZ_LND_Per
}
if(max(wd$LND)>50){
##Set anything to Land if Land_Per is > 50%
wd[which(wd$LND>50),]$DEPTH_BIN<-"LAND"
wd[which(wd$LND>50),]$HARD_10<-"L"
wd[which(wd$LND>50),]$HARD_50<-"L"
wd[which(wd$LND>50),]$ZONE_CODE<-"LND"
}
wd$LND<-NULL
#save guam
write.csv(wd,file="X:/GIS/Projects/CommonMaps/MARI/GUA/KSM_gua_50_grid_table.csv")
unk<-read.csv("D:/CRED/GIS/common_maps/GUAM/reefzones/GUA_unk_depth_filled.csv")
wd<-read.csv("X:/GIS/Projects/CommonMaps/MARI/GUA/KSM_gua_50_grid_table.csv")
colnames(wd)
colnames(unk)
unkn<-unk[,c("ID_50m","ZONE_CODE")]
wd1<-wd[,c("FID","ID_50m","ID_200m","MidPt_Lat","MidPt_Long,Bty_Src",
"Bty_Min","Bty_Max","Bty_Mean","Bty_Std","Bty_Cnt","Hard_Per","Soft_Per",
"Land_Per","Other_Per","Unk_Per","HS_Src","RZ_FRF_Per", "RZ_BRF_Per" ,"RZ_LAG_Per","RZ_RCF_Per", "RZ_PRS_Per" ,"RZ_LND_Per", "RZ_UNK_Per", "SEC_NAME" ,  "DEPTH_BIN" , "NOT_LAND", "HARD_10","HARD_50" )]
colnames(wd)
wd1<-wd[,c("FID","ID_50m","ID_200m","MidPt_Lat","MidPt_Long,Bty_Src","Bty_Min","Bty_Max","Bty_Mean","Bty_Std","Bty_Cnt","Hard_Per","Soft_Per","Land_Per","Other_Per","Unk_Per","HS_Src","RZ_FRF_Per", "RZ_BRF_Per" ,"RZ_LAG_Per","RZ_RCF_Per", "RZ_PRS_Per" ,"RZ_LND_Per", "RZ_UNK_Per", "SEC_NAME" ,  "DEPTH_BIN" , "NOT_LAND", "HARD_10","HARD_50")]
wd1<-wd[,c("FID","ID_50m","ID_200m","MidPt_Lat","MidPt_Long","Bty_Src","Bty_Min","Bty_Max","Bty_Mean","Bty_Std","Bty_Cnt","Hard_Per","Soft_Per","Land_Per","Other_Per","Unk_Per","HS_Src","RZ_FRF_Per", "RZ_BRF_Per" ,"RZ_LAG_Per","RZ_RCF_Per", "RZ_PRS_Per" ,"RZ_LND_Per", "RZ_UNK_Per", "SEC_NAME" ,  "DEPTH_BIN" , "NOT_LAND", "HARD_10","HARD_50")]
unique(wd$DEPTH_BIN)
rm(list=ls(all=TRUE))
wd<-read.csv("D:/CRED/GIS/common_maps/GUAM/reefzones/gua_grids_50m_table_join2_table.csv")
head(wd)
summary(wd)
wd$DEPTH_BIN<-"MISSING"
wd[is.na(wd$Bty_Mean),]$DEPTH_BIN<-"UNKN"
wd[which(wd$Bty_Mean > -1),]$DEPTH_BIN<-"ONEM" # not samplable
wd[which(wd$Bty_Mean >= -6 & wd$Bty_Mean < -1),]$DEPTH_BIN<-"SHAL"
wd[which(wd$Bty_Mean >= -18 & wd$Bty_Mean < -6),]$DEPTH_BIN<-"MIDD"
wd[which(wd$Bty_Mean >= -30 & wd$Bty_Mean < -18),]$DEPTH_BIN<-"DEEP"
wd[which(wd$Bty_Mean < -30),]$DEPTH_BIN<-"MESO"
wd[which(wd$Bty_Mean >= 0),]$DEPTH_BIN<-"LAND"
table(wd$DEPTH_BIN, wd$Hard_Per)
if("Hard_Per" %in% colnames(wd)){
nl<-which(wd$Land_Per<100)
wd$NOT_LAND<-(100-wd$Land_Per)/100
wd[nl, c("Hard_Per", "Unk_Per", "Soft_Per")]<-wd[nl, c("Hard_Per", "Unk_Per", "Soft_Per")]/wd[nl, ]$NOT_LAND
}
wd$HARD_50<-wd$HARD_10<-"MISSING"
h<-which(wd$Hard_Per>=10); 	if (length(h)>0)	 	wd[h,]$HARD_10<-"H"
s<-which(wd$HARD_10=="MISSING" & wd$Soft_Per>=wd$Unk_Per); 	if (length(s)>0)		 	wd[s,]$HARD_10<-"S"
u<-which(wd$HARD_10=="MISSING" & wd$Unk_Per>wd$Soft_Per); 	if (length(u)>0)	 		wd[u,]$HARD_10<-"U"
table(wd$HARD_10)
u<-which(wd$Unk_Per>50); 	if (length(u)>0)	 	wd[u,]$HARD_50<-"U"
s<-which(wd$HARD_50=="MISSING" & wd$Soft_Per>wd$Hard_Per); 	if (length(s)>0)	 	wd[s,]$HARD_50<-"S"
h<-which(wd$HARD_50=="MISSING" & wd$Hard_Per>=wd$Soft_Per); 	if (length(h)>0)	 	wd[h,]$HARD_50<-"H"
table(wd$HARD_50)
} else {
rm(list=ls(all=TRUE))
GRIDFILES<-read.csv("D:/CRED/GIS/common_maps/GUAM/reefzones/gua_grids_50m_table_join2_table.csv")
INDEX<-4
gridf<-GRIDFILES[INDEX]
wd<-orig.wd<-read.csv(gridf)
head(wd)
summary(wd)
View(gridf)
rm(list=ls(all=TRUE))
wd<-read.csv("D:/CRED/GIS/common_maps/GUAM/reefzones/gua_grids_50m_table_join2_table.csv")
wd$DEPTH_BIN<-"MISSING"
wd[is.na(wd$Bty_Mean),]$DEPTH_BIN<-"UNKN"
# label depth ranges on mean bathy value
wd[which(wd$Bty_Mean > -1),]$DEPTH_BIN<-"ONEM" # not samplable
wd[which(wd$Bty_Mean >= -6 & wd$Bty_Mean < -1),]$DEPTH_BIN<-"SHAL"
wd[which(wd$Bty_Mean >= -18 & wd$Bty_Mean < -6),]$DEPTH_BIN<-"MIDD"
wd[which(wd$Bty_Mean >= -30 & wd$Bty_Mean < -18),]$DEPTH_BIN<-"DEEP"
wd[which(wd$Bty_Mean < -30),]$DEPTH_BIN<-"MESO"
# not all grids have this, but some have values of 1
#wd[which(wd$Bty_Mean >= 0),]$DEPTH_BIN<-"LAND"    #Possibly set to SHAL! (as default) .. as these are right next to land!
table(wd$DEPTH_BIN, wd$Hard_Per)
if("Hard_Per" %in% colnames(wd)){
#Change hard and soft and unknown per to be proportion of not land
if("Hard_Per" %in% colnames(wd)){
nl<-which(wd$Land_Per<100)
wd$NOT_LAND<-(100-wd$Land_Per)/100
wd[nl, c("Hard_Per", "Unk_Per", "Soft_Per")]<-wd[nl, c("Hard_Per", "Unk_Per", "Soft_Per")]/wd[nl, ]$NOT_LAND
}
# create fields for hard soft
wd$HARD_50<-wd$HARD_10<-"MISSING"
## HARD_1O set to "H" if hard >= 10%, otherwise set to whatever is higher of soft or unknown
table(wd$Hard_Per)
h<-which(wd$Hard_Per>=10); 	if (length(h)>0)	 	wd[h,]$HARD_10<-"H"
s<-which(wd$HARD_10=="MISSING" & wd$Soft_Per>=wd$Unk_Per); 	if (length(s)>0)		 	wd[s,]$HARD_10<-"S"
u<-which(wd$HARD_10=="MISSING" & wd$Unk_Per>wd$Soft_Per); 	if (length(u)>0)	 		wd[u,]$HARD_10<-"U"
table(wd$HARD_10)
## HARD_50 sets to Unknown if > 50% Unkown .. otherwise set to majority of hard/soft
u<-which(wd$Unk_Per>50); 	if (length(u)>0)	 	wd[u,]$HARD_50<-"U"
s<-which(wd$HARD_50=="MISSING" & wd$Soft_Per>wd$Hard_Per); 	if (length(s)>0)	 	wd[s,]$HARD_50<-"S"
h<-which(wd$HARD_50=="MISSING" & wd$Hard_Per>=wd$Soft_Per); 	if (length(h)>0)	 	wd[h,]$HARD_50<-"H"
table(wd$HARD_50)
} else {
# No hard/soft information
wd$HARD_10<-wd$HARD_50<-"U"
}
wd$ZONE_CODE<-"FRF"   #Default
RZ_NAMES<-c("RZ_FRF_Per", "RZ_BRF_Per", "RZ_LAG_Per", "RZ_RCF_Per", "RZ_PRS_Per", "RZ_UNK_Per")
wd$MAX_POS<-apply(wd[,RZ_NAMES],1,which.max)
RZONES<-c("FRF", "BRF", "LAG", "RCF", "PRS", "UNK")
wd$ZONE_CODE<-as.factor(wd$MAX_POS)
levels(wd$ZONE_CODE)<-RZONES[sort(unique(wd$MAX_POS))]
wd$MAX_POS<-NULL
wd$LND<-0
if("Land_Per" %in% colnames(wd)){
wd$LND<-wd$Land_Per
} else {
wd$LND<-wd$RZ_LND_Per
}
if(max(wd$LND)>50){
##Set anything to Land if Land_Per is > 50%
wd[which(wd$LND>50),]$DEPTH_BIN<-"LAND"
wd[which(wd$LND>50),]$HARD_10<-"L"
wd[which(wd$LND>50),]$HARD_50<-"L"
levels(wd$ZONE_CODE)<-c(levels(wd$ZONE_CODE), "LND")
wd[which(wd$LND>50),]$ZONE_CODE<-"LND"
wd[which(wd$LND>50),]$DEPTH_BIN<-"LAND"
}
wd$LND<-NULL
}
wd$LND<-NULL
wd.out<-merge(orig.wd, wd[,c("FID", "DEPTH_BIN", "HARD_10", "HARD_50", "ZONE_CODE")], by="FID", all.x=T)  #was previously joining on OBJECTID
wd$LND<-NULL
wd.out<-merge(orig.wd, wd[,c("FID", "DEPTH_BIN", "HARD_10", "HARD_50", "ZONE_CODE")], by="FID", all.x=T)  #was previously joining on OBJECTID
colnames(wd)
gua<-read.csv("D:/CRED/GIS/common_maps/GUAM/reefzones/gua_grids_50m_table_join2_table.csv")
wd.out<-merge(gua, wd[,c("FID", "DEPTH_BIN", "HARD_10", "HARD_50", "ZONE_CODE")], by="FID", all.x=T)  #was previously joining on OBJECTID
wd.out<-merge(gua,wd[,c("FID", "DEPTH_BIN", "HARD_10", "HARD_50", "ZONE_CODE")], by="FID", all.x=T)  #was previously joining on OBJECTID
rm(list=ls(all=TRUE))
gua<-read.csv("D:/CRED/GIS/common_maps/GUAM/reefzones/gua_grids_50m_table_join2_table.csv")
wd<-gua
wd$DEPTH_BIN<-"MISSING"
wd[is.na(wd$Bty_Mean),]$DEPTH_BIN<-"UNKN"
# label depth ranges on mean bathy value
wd[which(wd$Bty_Mean > -1),]$DEPTH_BIN<-"ONEM" # not samplable
wd[which(wd$Bty_Mean >= -6 & wd$Bty_Mean < -1),]$DEPTH_BIN<-"SHAL"
wd[which(wd$Bty_Mean >= -18 & wd$Bty_Mean < -6),]$DEPTH_BIN<-"MIDD"
wd[which(wd$Bty_Mean >= -30 & wd$Bty_Mean < -18),]$DEPTH_BIN<-"DEEP"
wd[which(wd$Bty_Mean < -30),]$DEPTH_BIN<-"MESO"
# not all grids have this, but some have values of 1
#wd[which(wd$Bty_Mean >= 0),]$DEPTH_BIN<-"LAND"    #Possibly set to SHAL! (as default) .. as these are right next to land!
table(wd$DEPTH_BIN, wd$Hard_Per)
if("Hard_Per" %in% colnames(wd)){
#Change hard and soft and unknown per to be proportion of not land
if("Hard_Per" %in% colnames(wd)){
nl<-which(wd$Land_Per<100)
wd$NOT_LAND<-(100-wd$Land_Per)/100
wd[nl, c("Hard_Per", "Unk_Per", "Soft_Per")]<-wd[nl, c("Hard_Per", "Unk_Per", "Soft_Per")]/wd[nl, ]$NOT_LAND
}
# create fields for hard soft
wd$HARD_50<-wd$HARD_10<-"MISSING"
## HARD_1O set to "H" if hard >= 10%, otherwise set to whatever is higher of soft or unknown
table(wd$Hard_Per)
h<-which(wd$Hard_Per>=10); 	if (length(h)>0)	 	wd[h,]$HARD_10<-"H"
s<-which(wd$HARD_10=="MISSING" & wd$Soft_Per>=wd$Unk_Per); 	if (length(s)>0)		 	wd[s,]$HARD_10<-"S"
u<-which(wd$HARD_10=="MISSING" & wd$Unk_Per>wd$Soft_Per); 	if (length(u)>0)	 		wd[u,]$HARD_10<-"U"
table(wd$HARD_10)
## HARD_50 sets to Unknown if > 50% Unkown .. otherwise set to majority of hard/soft
u<-which(wd$Unk_Per>50); 	if (length(u)>0)	 	wd[u,]$HARD_50<-"U"
s<-which(wd$HARD_50=="MISSING" & wd$Soft_Per>wd$Hard_Per); 	if (length(s)>0)	 	wd[s,]$HARD_50<-"S"
h<-which(wd$HARD_50=="MISSING" & wd$Hard_Per>=wd$Soft_Per); 	if (length(h)>0)	 	wd[h,]$HARD_50<-"H"
table(wd$HARD_50)
} else {
# No hard/soft information
wd$HARD_10<-wd$HARD_50<-"U"
}
RZ_NAMES<-c("RZ_FRF_Per", "RZ_BRF_Per", "RZ_LAG_Per", "RZ_RCF_Per", "RZ_PRS_Per", "RZ_UNK_Per")
wd$MAX_POS<-apply(wd[,RZ_NAMES],1,which.max)
RZONES<-c("FRF", "BRF", "LAG", "RCF", "PRS", "UNK")
wd$ZONE_CODE<-as.factor(wd$MAX_POS)
levels(wd$ZONE_CODE)<-RZONES[sort(unique(wd$MAX_POS))]
#	table(wd$ZONE_CODE, wd$MAX_POS)
wd$MAX_POS<-NULL
wd$LND<-0
if("Land_Per" %in% colnames(wd)){
wd$LND<-wd$Land_Per
} else {
wd$LND<-wd$RZ_LND_Per
}
if(max(wd$LND)>50){
##Set anything to Land if Land_Per is > 50%
wd[which(wd$LND>50),]$DEPTH_BIN<-"LAND"
wd[which(wd$LND>50),]$HARD_10<-"L"
wd[which(wd$LND>50),]$HARD_50<-"L"
levels(wd$ZONE_CODE)<-c(levels(wd$ZONE_CODE), "LND")
wd[which(wd$LND>50),]$ZONE_CODE<-"LND"
wd[which(wd$LND>50),]$DEPTH_BIN<-"LAND"
}
wd$LND<-NULL
wd.out<-merge(gua,wd[,c("FID", "DEPTH_BIN", "HARD_10", "HARD_50", "ZONE_CODE")], by="FID", all.x=T)  #was previously joining on OBJECTID
colnames(gua)
colnames(wd)
wd.out<-merge(gua,wd[,c("ID_50m", "DEPTH_BIN", "HARD_10", "HARD_50", "ZONE_CODE")], by="ID_50m", all.x=T)  #was previously joining on OBJECTID
write.csv(wd.out,file="X:/GIS/Projects/CommonMaps/MARI/GUA/KSM_gua_50_grid_table.csv")
unkn<-unk[,c("ID_50m","ZONE_CODE")]
unk<-read.csv("D:/CRED/GIS/common_maps/GUAM/reefzones/GUA_unk_depth_filled.csv")
colnames(unk)
unkn<-unk[,c("ID_50m","ZONE_CODE")]
wd1<-wd2[,c("FID","ID_50m","ID_200m","MidPt_Lat","MidPt_Long","Bty_Src","Bty_Min","Bty_Max","Bty_Mean","Bty_Std","Bty_Cnt","Hard_Per","Soft_Per","Land_Per","Other_Per","Unk_Per","HS_Src","RZ_FRF_Per", "RZ_BRF_Per" ,"RZ_LAG_Per","RZ_RCF_Per", "RZ_PRS_Per" ,"RZ_LND_Per", "RZ_UNK_Per", "SEC_NAME" ,  "DEPTH_BIN" , "NOT_LAND", "HARD_10","HARD_50")]
wd2<-wd.out
wd1<-wd2[,c("FID","ID_50m","ID_200m","MidPt_Lat","MidPt_Long","Bty_Src","Bty_Min","Bty_Max","Bty_Mean","Bty_Std","Bty_Cnt","Hard_Per","Soft_Per","Land_Per","Other_Per","Unk_Per","HS_Src","RZ_FRF_Per", "RZ_BRF_Per" ,"RZ_LAG_Per","RZ_RCF_Per", "RZ_PRS_Per" ,"RZ_LND_Per", "RZ_UNK_Per", "SEC_NAME" ,  "DEPTH_BIN" , "NOT_LAND", "HARD_10","HARD_50")]
wd1<-wd2[,c("ID_50m","ID_200m","MidPt_Lat","MidPt_Long","Bty_Src","Bty_Min","Bty_Max","Bty_Mean","Bty_Std","Bty_Cnt","Hard_Per","Soft_Per","Land_Per","Other_Per","Unk_Per","HS_Src","RZ_FRF_Per", "RZ_BRF_Per" ,"RZ_LAG_Per","RZ_RCF_Per", "RZ_PRS_Per" ,"RZ_LND_Per", "RZ_UNK_Per", "SEC_NAME" ,  "DEPTH_BIN" , "NOT_LAND", "HARD_10","HARD_50")]
colnames(wd2)
wd1<-wd2[,c("ID_50m","OBJECTID","ID_200m","MidPt_Lat","MidPt_Long","Bty_Src","Bty_Min","Bty_Max","Bty_Mean","Bty_Std","Bty_Cnt","Hard_Per","Soft_Per","Land_Per","Other_Per","Unk_Per","HS_Src","RZ_FRF_Per", "RZ_BRF_Per","RZ_LAG_Per","RZ_RCF_Per","RZ_PRS_Per","RZ_LND_Per","RZ_UNK_Per","SEC_NAME","Shape_Length", "Shape_Area"  , "DEPTH_BIN"   , "HARD_10"   ,   "HARD_50")]
ggrid<-merge(wd1,unk,by="ID_50m",all.x=T)
ggrid<-merge(wd1,unkn,by="ID_50m",all.x=T)
head(ggrid)
unique(ggrid$DEPTH_BIN)
summary(ggrid)
unique(unk$DEPTH_BIN)
wd1<-wd2[,c("ID_50m","OBJECTID","ID_200m","MidPt_Lat","MidPt_Long","Bty_Src","Bty_Min","Bty_Max","Bty_Mean","Bty_Std","Bty_Cnt","Hard_Per","Soft_Per","Land_Per","Other_Per","Unk_Per","HS_Src","RZ_FRF_Per", "RZ_BRF_Per","RZ_LAG_Per","RZ_RCF_Per","RZ_PRS_Per","RZ_LND_Per","RZ_UNK_Per","SEC_NAME","Shape_Length", "Shape_Area"  , "HARD_10"   ,   "HARD_50","ZONE_CODE")]
ggrid<-merge(wd1,unkn,by="ID_50m",all.x=T)
head(ggrid)
unkn<-unk[,c("ID_50m","DEPTH_BIN")]
wd1<-wd2[,c("ID_50m","OBJECTID","ID_200m","MidPt_Lat","MidPt_Long","Bty_Src","Bty_Min","Bty_Max","Bty_Mean","Bty_Std","Bty_Cnt","Hard_Per","Soft_Per","Land_Per","Other_Per","Unk_Per","HS_Src","RZ_FRF_Per", "RZ_BRF_Per","RZ_LAG_Per","RZ_RCF_Per","RZ_PRS_Per","RZ_LND_Per","RZ_UNK_Per","SEC_NAME","Shape_Length", "Shape_Area"  , "HARD_10"   ,   "HARD_50","ZONE_CODE")]
ggrid<-merge(wd1,unkn,by="ID_50m",all.x=T)
head(ggrid)
unique(ggrid$DEPTH_BIN)
write.csv(wd.out,file="X:/GIS/Projects/CommonMaps/MARI/GUA/KSM_gua_50_grid_table.csv")
write.csv(wd.out,file="D:/CRED/GIS/common_maps/GUAM/reefzones/KSM_gua_50_grid_table.csv")
write.csv(ggrid, file="D:/CRED/GIS/common_maps/GUAM/reefzones/NEW_gua_unk_depth_bin_filled.csv")
rm(list=ls())
setwd("D:/CRED/fish_cruise_routine_report/monitoring_report/2017_status_report")
library(gdata)             # needed for drop_levels()
library(reshape)           # reshape library inclues the cast() function used below
source("D:/CRED/fish_team_R/fish-paste/lib/core_functions.R")
source("D:/CRED/fish_team_R/fish-paste/lib/fish_team_functions.R")
source("D:/CRED/fish_team_R/fish-paste/lib/Islandwide Mean&Variance Functions.R")
# get strata and sectors data data - NB - the data in the raw file should be checked and updated
sectors<-read.csv("D:/CRED/fish_team_R/fish-paste/data/Sectors-Strata-Areas.csv", stringsAsFactors=FALSE)
# load site master to merge with sector names
site_master<-read.csv("D:/CRED/fish_team_R/fish-paste/data/SITE MASTER.csv")
site_master$SITE<-SiteNumLeadingZeros(site_master$SITE)
## LOAD AND CLEAN fish data
load("D:/CRED/fish_team_R/fish-paste/data/ALL_REA_FISH_RAW.rdata")
x<-df
DATA_COLS<-c("SITEVISITID", "METHOD", "DATE_", "OBS_YEAR",  "SITE", "REEF_ZONE",  "DEPTH_BIN",  "ISLAND", "LATITUDE",  "LONGITUDE",  "REGION" , "REGION_NAME", "EXCLUDE_FLAG", "TRAINING_YN",
"REP",  "REPLICATEID", "DIVER", "HABITAT_CODE", "DEPTH",
"HARD_CORAL", "MA",  "TA",  "CCA",  "SAND",  "SOFT_CORAL", "CLAM" , "SPONGE", "CORALLIMORPH", "CYANO", "TUNICATE", "ZOANTHID" , "OTHER",
"SPECIES", "COUNT", "SIZE_", "OBS_TYPE",
"COMPLEXITY", "SUBSTRATE_HEIGHT_0", "SUBSTRATE_HEIGHT_20", "SUBSTRATE_HEIGHT_50", "SUBSTRATE_HEIGHT_100", "SUBSTRATE_HEIGHT_150", "MAX_HEIGHT",
"SCIENTIFIC_NAME",  "TAXONNAME", "COMMONNAME", "GENUS", "FAMILY" , "COMMONFAMILYALL", "LMAX", "LW_A",  "LW_B",  "LENGTH_CONVERSION_FACTOR", "TROPHIC", "TROPHIC_MONREP")
head(x[,DATA_COLS])
x<-x[,DATA_COLS]
x$SITE<-SiteNumLeadingZeros(x$SITE)
x[is.na(x$TRAINING_YN),]$TRAINING_YN<-FALSE   # Training falg of NA is equivalent to a FALSE .. as none of the odler data was 'training data'
x<-subset(x, x$TRAINING_YN==FALSE)
# by default, remove sites with EXCLUDE_FLAG set to TRUE
x<-subset(x, x$EXCLUDE_FLAG==0, drop=TRUE)
x<-subset(x, x$METHOD %in% c("nSPC"), drop=TRUE)
x<-subset(x, x$OBS_YEAR >2008, drop=TRUE)
x<-subset(x, x$OBS_TYPE %in% c("U","I","N"))
#add SEC_NAME to x
# this would be better if SECTOR field in database was up to date properly .. rather than merge with the site_Sectors spreadsheet
x<-merge(x, site_master[,c("SITE", "SEC_NAME", "ANALYSIS_YEAR", "ANALYSIS_SCHEME")], by="SITE", all.x=TRUE)
idw<-x[is.na(x$SEC_NAME)  & x$METHOD=="nSPC", c("REGION", "SITE","OBS_YEAR", "METHOD"),]
if(dim(idw)[1]>0) {cat("nSPC sites with MISSING SEC_NAME")}   # should be 0
#for ones that are missing, set it to ISLAND
no_secs<-is.na(x$SEC_NAME)
tmp<-as.character(x$SEC_NAME)
tmp[no_secs]<-as.character(x[no_secs,]$ISLAND)
x$SEC_NAME<-tmp
sh_out<-CalcMeanSHMeanSHDiff(x)
x$MEAN_SH<-sh_out[[1]]
x$MEAN_SH_DIFF<-sh_out[[2]]
# remove the component SUBSTRATE_HEIGHT fields
x<-x[, setdiff(names(x),c("SUBSTRATE_HEIGHT_0", "SUBSTRATE_HEIGHT_20", "SUBSTRATE_HEIGHT_50", "SUBSTRATE_HEIGHT_100", "SUBSTRATE_HEIGHT_150"))]
############################################################################################
x<-droplevels(x)
# nine<-x[x$OBS_YEAR=="2009",]
# nine<-nine[nine$REGION=="MHI",]
#######################
## CLEAN UP NAs #######
#######################
tmp.lev<-levels(x$HABITAT_CODE); head(tmp.lev)
levels(x$HABITAT_CODE)<-c(tmp.lev, "UNKNOWN")
tmp.lev<-levels(x$SCIENTIFIC_NAME); head(tmp.lev)
levels(x$SCIENTIFIC_NAME)<-c(tmp.lev, "UNKNOWN")
tmp.lev<-levels(x$COMMONNAME); head(tmp.lev)
levels(x$COMMONNAME)<-c(tmp.lev, "UNKNOWN")
tmp.lev<-levels(x$GENUS); head(tmp.lev)
levels(x$GENUS)<-c(tmp.lev, "UNKNOWN")
tmp.lev<-levels(x$FAMILY); head(tmp.lev)
levels(x$FAMILY)<-c(tmp.lev, "UNKNOWN")
tmp.lev<-levels(x$COMMONFAMILYALL); head(tmp.lev)
levels(x$COMMONFAMILYALL)<-c(tmp.lev, "UNKNOWN")
tmp.lev<-levels(x$TROPHIC_MONREP); head(tmp.lev)
levels(x$TROPHIC_MONREP)<-c(tmp.lev, "UNKNOWN")
x[is.na(x$HABITAT_CODE),"HABITAT_CODE"]<-"UNKNOWN"
x[is.na(x$SCIENTIFIC_NAME),"SCIENTIFIC_NAME"]<-"UNKNOWN"
x[is.na(x$COMMONNAME),"COMMONNAME"]<-"UNKNOWN"
x[is.na(x$GENUS),"GENUS"]<-"UNKNOWN"
x[is.na(x$FAMILY),"FAMILY"]<-"UNKNOWN"
x[is.na(x$COMMONFAMILYALL),"COMMONFAMILYALL"]<-"UNKNOWN"
x[is.na(x$TROPHIC_MONREP),"TROPHIC_MONREP"]<-"UNKNOWN"
x[is.na(x$COUNT),]$COUNT<-0
x[is.na(x$SIZE_),]$SIZE_<-0
###x[is.na(x$LMAX),]$LMAX<-999
## separate out the north and south marianas
levels(x$REGION)<-c(levels(x$REGION), "S.MARIAN", "N.MARIAN")
x[x$ISLAND %in% c("Guam", "Rota", "Aguijan", "Tinian", "Saipan"),]$REGION<-"S.MARIAN"
x[x$ISLAND %in% c("Alamagan","Guguan","Sarigan","Pagan", "Agrihan", "Asuncion", "Maug", "Farallon de Pajaros"),]$REGION<-"N.MARIAN"
sectors[sectors$ISLAND %in% c("Guam", "Rota", "Aguijan", "Tinian", "Saipan"),]$REGION<-"S.MARIAN"
sectors[sectors$ISLAND %in% c("Alamagan","Guguan","Sarigan","Pagan", "Agrihan", "Asuncion", "Maug", "Farallon de Pajaros"),]$REGION<-"N.MARIAN"
sectors<-droplevels(sectors)
# WORKING WITH POOLING READY DATA FROM HERE ON
########################################################################################################################
wd<-droplevels(x)
colnames(wd)
n<-wd[wd$SEC_NAME=="OAH_NORTH",]
n<-n[n$SIZE_ <20, ]
head(n)
n<-n[n$SIZE_ <20, c("SITE","OBS_YEAR","DEPTH_BIN","COUNT","SIZE_", "SCIENTIFIC_NAME","COMMONNAME")]
write.csv(n,file=("D:/CRED/data requests/Kaua_Waimea_under20/oah_n_sector.csv"))
rm(list=ls())
library(gdata)             # needed for drop_levels()
library(reshape)           # reshape library inclues the cast() function used below
#####    CLEANING DATA  ########################
################################################
# LOAD FUNCTIONS FOR DATA CLEANING
setwd("D:/CRED/fish_team_R/fish-paste/lib")
source("fish_team_functions.R")
source("Islandwide Mean&Variance Functions.R")
#source("Indicator_functions.R")
# get strata and sectors data - NB - the data in the raw file should be checked and updated
sectors<-read.csv("D:/CRED/fish_team_R/fish-paste/data/Sectors-Strata-Areas.csv", stringsAsFactors=FALSE)
# load summary data from cruise
setwd("D:/CRED/fish_cruise_routine_report/monitoring_blog/2018_blogs/ASRAMP/LEG 1")
df<-read.csv("FISH_REA_BASE_061318.csv")
x<-df
colnames(x)<-toupper(colnames(x))
colnames(x)
DATA_COLS<-c("SITEVISITID", "METHOD", "DATE_", "OBS_YEAR",  "SITE", "REEF_ZONE",  "DEPTH_BIN",  "ISLAND", "LATITUDE",  "LONGITUDE",  "REGION" , "REP",  "REPLICATEID", "DIVER", "HABITAT_CODE", "DEPTH", "HARD_CORAL", "MA",  "CCA",  "SAND", "OTHER",	"SPECIES", "COUNT", "SIZE_", "OBS_TYPE",
"TAXONNAME", "FAMILY" , "COMMONFAMILYALL", "LMAX", "LW_A",  "LW_B",  "LENGTH_CONVERSION_FACTOR", "TROPHIC")#, "TROPHIC_MONREP")
head(x[,DATA_COLS])
x<-x[,DATA_COLS]
x$STRATA<-paste(x$REEF_ZONE, x$DEPTH_BIN, sep='')
x<-subset(x, x$METHOD %in% c("nSPC"))
x<-subset(x, x$OBS_TYPE %in% c("U","I","N"))
#x<-subset(x, x$REGION %in% c("NWHI", "MARIAN") | x$ISLAND == "Wake")
tmp.lev<-levels(x$HABITAT_CODE); head(tmp.lev)
levels(x$HABITAT_CODE)<-c(tmp.lev, "UNKNOWN")
tmp.lev<-levels(x$SCIENTIFIC_NAME); head(tmp.lev)
levels(x$SCIENTIFIC_NAME)<-c(tmp.lev, "UNKNOWN")
tmp.lev<-levels(x$COMMONNAME); head(tmp.lev)
levels(x$COMMONNAME)<-c(tmp.lev, "UNKNOWN")
#tmp.lev<-levels(x$GENUS); head(tmp.lev)
#levels(x$GENUS)<-c(tmp.lev, "UNKNOWN")
tmp.lev<-levels(x$FAMILY); head(tmp.lev)
levels(x$FAMILY)<-c(tmp.lev, "UNKNOWN")
tmp.lev<-levels(x$COMMONFAMILYALL); head(tmp.lev)
levels(x$COMMONFAMILYALL)<-c(tmp.lev, "UNKNOWN")
tmp.lev<-levels(x$TROPHIC_MONREP); head(tmp.lev)
levels(x$TROPHIC_MONREP)<-c(tmp.lev, "UNKNOWN")
x[is.na(x$HABITAT_CODE),"HABITAT_CODE"]<-"UNKNOWN"
x[is.na(x$SCIENTIFIC_NAME),"SCIENTIFIC_NAME"]<-"UNKNOWN"
x[is.na(x$COMMONNAME),"COMMONNAME"]<-"UNKNOWN"
x[is.na(x$GENUS),"GENUS"]<-"UNKNOWN"
x[is.na(x$FAMILY),"FAMILY"]<-"UNKNOWN"
x[is.na(x$COMMONFAMILYALL),"COMMONFAMILYALL"]<-"UNKNOWN"
x[is.na(x$TROPHIC_MONREP),"TROPHIC_MONREP"]<-"UNKNOWN"
wd<-x
wd[is.na(wd)]<-0
UNIQUE_SURVEY<-c("SITEVISITID","METHOD")
UNIQUE_REP<-c(UNIQUE_SURVEY, "REP")
UNIQUE_COUNT<-c(UNIQUE_REP, "REPLICATEID")
SURVEY_INFO<-c("OBS_YEAR", "REGION", "REGION_NAME", "ISLAND", "SITE", "DATE_", "REEF_ZONE", "DEPTH_BIN", "STRATA", "LATITUDE", "LONGITUDE", "SITEVISITID", "METHOD")
wd$ANALYSIS_STRATA<-paste(wd$REEF_ZONE,wd$DEPTH_BIN,sep='')
survey_table<-Aggregate_InputTable(wd, SURVEY_INFO)
setwd("D:/CRED/fish_team_R/fish-paste/lib")
source("fish_team_functions.R")
source("Islandwide Mean&Variance Functions.R")
#source("Indicator_functions.R")
wd[is.na(wd)]<-0
UNIQUE_SURVEY<-c("SITEVISITID","METHOD")
UNIQUE_REP<-c(UNIQUE_SURVEY, "REP")
UNIQUE_COUNT<-c(UNIQUE_REP, "REPLICATEID")
SURVEY_INFO<-c("OBS_YEAR", "REGION", "ISLAND", "SITE", "DATE_", "REEF_ZONE", "DEPTH_BIN", "STRATA", "LATITUDE", "LONGITUDE", "SITEVISITID", "METHOD")
wd$ANALYSIS_STRATA<-paste(wd$REEF_ZONE,wd$DEPTH_BIN,sep='')
survey_table<-Aggregate_InputTable(wd, SURVEY_INFO)
