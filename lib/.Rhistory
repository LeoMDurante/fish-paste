axis.title = element_text(size = 15),
axis.text.x = element_text(angle = 0, vjust= 1, hjust=0.5, size = 15, colour="black"),
axis.text.y = element_text(angle = 0, hjust=0.5, size = 15, colour="black"),
strip.text.y = element_text(angle = 0, size = 15),
strip.text = element_text(size=15)) +
theme(axis.text.y=element_text(colour="black")) +
labs(y = "Prevalence (%)", x = NULL) +
theme(strip.text.x = element_text(margin = margin(.1, 0, .1, 0, "cm")))+
scale_y_continuous(labels = scaleFUN)
ggplot(health[ which(health$islacode == "PAL"),], aes(fill = Prevalence, y = prev, x = year)) +
facet_grid(~.type) +
geom_rect(data=subset(health[ which(health$islacode == "PAL"),], type=="Fixed sites"), aes(fill=type),xmin= -Inf, xmax= Inf, ymin= -Inf, ymax=Inf, fill='light gray')+
geom_bar(stat = "identity", position = position_dodge(), colour="black") +
scale_y_continuous(breaks=waiver()) +
geom_errorbar(limits, position=dodge, width=0.25) +
#scale_fill_manual(values = c("springgreen1", "springgreen4")) +
facet_grid(Prevalence ~ type, scales ="free", space = "free") +
theme_bw()+
theme(
panel.border = element_rect(colour="dark gray"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position="right",
legend.title = element_blank(),
axis.title = element_text(size = 15),
axis.text.x = element_text(angle = 0, vjust= 1, hjust=0.5, size = 15, colour="black"),
axis.text.y = element_text(angle = 0, hjust=0.5, size = 15, colour="black"),
strip.text.y = element_text(angle = 0, size = 15),
strip.text = element_text(size=15)) +
theme(axis.text.y=element_text(colour="black")) +
labs(y = "Prevalence (%)", x = NULL) +
theme(strip.text.x = element_text(margin = margin(.1, 0, .1, 0, "cm")))+
scale_y_continuous(labels = scaleFUN)
#  to use with cruise brief
library(maptools)
library(mapdata)
library(PBSmapping)
library(plyr)
library(rgdal)
library(plotrix)
library(tmap)
library(rgeos)
library(raster)
library(grid)
library(maps)
# bubble colors (first three numbers, 4th number is transparency .3 = 30% transparent)
# symbol.bg=rgb(1,1,0,0.3) = yellowish
# symbol.bg=rgb(1,0,0,0.3) = red
# (1,0,1) = purple
# (0,1,1) = electric blue
# (0,0,1) = royal blue
grid# clear workspace
rm(list=ls())
# clear graphics
graphics.off()
# read in data
load("D:/CRED/fish_cruise_routine_report/monitoring_report/2017_status_report/data/Data Outputs/working site data CAPPED.rdata") # loads as 'wsd'
############## Johnston,Howland, Baker ############
# Get relevant data
head(wsd)
sam<-wsd[wsd$REGION=="SAMOA",]
sam<-sam[sam$ANALYSIS_YEAR==2015,]
sam<-droplevels(sam)
#reading in shapefiles (uses maptools)
island <- importShapefile("D:/CRED/GIS/Common shapefiles/islands.shp")
# get bounding limits for each island
ext=read.csv("D:/CRED/fish_team_R/web based stuff/island_extents_for_R_maps.csv")
graphics.off()
#
# Set up 3 windows, one for each island. Joh bigger on top, then bak how under
#create matrix
mat <- matrix(c(1,2,
1,2,
3,4),nrow=2,ncol=3)
mat
#par(mar=c(0,0,0,0), oma=c(0,0,0,0))
layout(mat=mat)
# #max.h<-c(x,x,x,x) #set manually
# layout(mat=mat,widths=c(1,1),
#        heights=c(1,1))
# layout.show(3)
#layout(mat=mat)
#check margins:
par("mar")
par(mar=c(1,1,0,0), oma=c(0,0,0,0))
# TAU
plotMap(island,xlim=c(-169.537, -169.4), ylim=c(-14.282, -14.204),col="gray",bg="lightblue", axes=F,xlab="",ylab="", projection = TRUE, plt = c(.01, .99, .01, .8), polyProps = NULL)#,tckLab=T)
title(main="Tau", line=-1.0, cex=1.5)
#points(pch=21,mhi$LONGITUDE, mhi$LATITUDE,col="red",cex=1)
addBubbles(data.frame(EID=1:length(sam$LONGITUDE),
X=sam$LONGITUDE, Y=sam$LATITUDE, Z=sam$TotFish),
z.max=470, legend.title=expression(paste(" Biomass (g ", m^-2,")",sep="")),max.size=0.6,
symbol.fg=rgb(0,0,0,0.6), symbol.bg=rgb(1,0,0,0.3),legend.cex=0.9)
#OFU
plotMap(island,xlim=c(-169.697, -169.591), ylim=c(-14.201, -14.14),col="gray",bg="lightblue", axes=F,xlab="",ylab="",projection = TRUE, plt = c(.01, .99, .25, .99), polyProps = NULL)
title(main="Ofu and Olosega",line=-1.0, cex=1.5)
#points(pch=21,mhi$LONGITUDE, mhi$LATITUDE,col="red",cex=1)
addBubbles(data.frame(EID=1:length(sam$LONGITUDE),
X=sam$LONGITUDE, Y=sam$LATITUDE, Z=sam$TotFish),
z.max=470, max.size=0.6,legend.pos ="none",
symbol.fg=rgb(0,0,0,0.6), symbol.bg=rgb(1,0,0,0.3))
# !!! Error ok: object 'legend.loc' not found
# ROS:
plotMap(island,xlim=c(-168.179, -168.13), ylim=c(-14.563, -14.523),col="gray",bg="lightblue", axes=F,xlab="",ylab="",projection = TRUE, plt = c(.01, .99, .01, .89), polyProps = NULL)
title(main="Rose",line=-1.0, cex=1.5)
#points(pch=21,mhi$LONGITUDE, mhi$LATITUDE,col="red",cex=1)
addBubbles(data.frame(EID=1:length(sam$LONGITUDE),
X=sam$LONGITUDE, Y=sam$LATITUDE, Z=sam$TotFish),
z.max=470, legend.pos ="none",max.size=0.6,
symbol.fg=rgb(0,0,0,0.6), symbol.bg=rgb(1,0,0,0.3))
# SWA:
plotMap(island,xlim=c(-171.101, -171.056), ylim=c(-11.073, -11.037),col="gray",bg="lightblue", axes=F,xlab="",ylab="",projection = TRUE, plt = c(.01, .99, .11, .99), polyProps = NULL)
title(main="Swains",line=-1.0, cex=1.5)
#points(pch=21,mhi$LONGITUDE, mhi$LATITUDE,col="red",cex=1)
addBubbles(data.frame(EID=1:length(sam$LONGITUDE),
X=sam$LONGITUDE, Y=sam$LATITUDE, Z=sam$TotFish),
z.max=470, legend.pos ="none",max.size=0.6,
symbol.fg=rgb(0,0,0,0.6), symbol.bg=rgb(1,0,0,0.3))
library(ggplot2)
library(plyr)
library(scales)
library(reshape)           # reshape library includes the cast() function used below
require(RColorBrewer)
load("D:/CRED/PRIMNM_REPORT/data/PRIA Tow Data.Rdata")
load("D:/CRED/PRIMNM_REPORT/data/PRIA Tow Data.R")
load("D:/CRED/PRIMNM_REPORT/data/PRIA Data By Island and Year 10-20m min 500m Tows.Rdata")
wd<-as.data.frame(isd)
head(wd)
load("D:\CRED\fish_cruise_routine_report\monitoring_report\2017_status_report\data\Data Outputs/clean_working_site_data_used_in_higher_pooling_for_report.Rdata")
load("D:/CRED/fish_cruise_routine_report/monitoring_report/2017_status_report/data/Data Outputs/clean_working_site_data_used_in_higher_pooling_for_report.Rdata")
head(wsd.uncap)
write.csv(wsd.uncap,file="D:/CRED/fish_cruise_routine_report/monitoring_report/2017_status_report/data/Data Outputs/clean_working_site_data_used_in_higher_pooling_for_report.csv")
wd<-read.csv("X:/GIS/Projects/CommonMaps/MARI/GUA/gua_50m_grid_for_script.csv")
head(wd)
colnames(wd)
wd$DEPTH_BIN<-"MISSING"
wd[is.na(wd$Bty_Mean),]$DEPTH_BIN<-"UNKN"
rm(list=ls(all=TRUE))
# setwd("/Users/ivor.williams/Documents/CRED/Fish Team/Grids")
wd<-read.csv("X:/GIS/Projects/CommonMaps/MARI/GUA/gua_50m_grid_for_script.csv")
head(wd)
summary(wd)
wd$DEPTH_BIN<-"MISSING"
head(wd)
str(wd)
wd[is.na(wd$Bty_Mean),]$DEPTH_BIN<-"UNKN"
wd[which(wd$Bty_Mean > -1),]$DEPTH_BIN<-"ONEM" # not samplable
wd[which(wd$Bty_Mean >= -6 & wd$Bty_Mean < -1),]$DEPTH_BIN<-"SHAL"
wd[which(wd$Bty_Mean >= -18 & wd$Bty_Mean < -6),]$DEPTH_BIN<-"MIDD"
wd[which(wd$Bty_Mean >= -30 & wd$Bty_Mean < -18),]$DEPTH_BIN<-"DEEP"
wd[which(wd$Bty_Mean < -30),]$DEPTH_BIN<-"MESO"
wd[which(wd$Bty_Mean >= 0),]$DEPTH_BIN<-"LAND"
wd[is.na(wd$Bty_Mean),]
table(wd$DEPTH_BIN, wd$Hard_Per)
if("Hard_Per" %in% colnames(wd)){
#Change hard and soft and unknown per to be proportion of not land
if("Hard_Per" %in% colnames(wd)){
nl<-which(wd$Land_Per<100)
wd$NOT_LAND<-(100-wd$Land_Per)/100
wd[nl, c("Hard_Per", "Unk_Per", "Soft_Per")]<-wd[nl, c("Hard_Per", "Unk_Per", "Soft_Per")]/wd[nl, ]$NOT_LAND
}
# create fields for hard soft
wd$HARD_50<-wd$HARD_10<-"MISSING"
## HARD_1O set to "H" if hard >= 10%, otherwise set to whatever is higher of soft or unknown
table(wd$Hard_Per)
h<-which(wd$Hard_Per>=10); 	if (length(h)>0)	 	wd[h,]$HARD_10<-"H"
s<-which(wd$HARD_10=="MISSING" & wd$Soft_Per>=wd$Unk_Per); 	if (length(s)>0)		 	wd[s,]$HARD_10<-"S"
u<-which(wd$HARD_10=="MISSING" & wd$Unk_Per>wd$Soft_Per); 	if (length(u)>0)	 		wd[u,]$HARD_10<-"U"
table(wd$HARD_10)
## HARD_50 sets to Unknown if > 50% Unkown .. otherwise set to majority of hard/soft
u<-which(wd$Unk_Per>50); 	if (length(u)>0)	 	wd[u,]$HARD_50<-"U"
s<-which(wd$HARD_50=="MISSING" & wd$Soft_Per>wd$Hard_Per); 	if (length(s)>0)	 	wd[s,]$HARD_50<-"S"
h<-which(wd$HARD_50=="MISSING" & wd$Hard_Per>=wd$Soft_Per); 	if (length(h)>0)	 	wd[h,]$HARD_50<-"H"
table(wd$HARD_50)
} else {
# No hard/soft information
wd$HARD_10<-wd$HARD_50<-"U"
}
if(INDEX %in% c(101, 108, 109, 110)){
wd$ZONE_CODE<-"FRF"
} else {
RZ_NAMES<-c("RZ_FRF_Per", "RZ_BRF_Per", "RZ_LAG_Per", "RZ_RCF_Per", "RZ_PRS_Per", "RZ_LND_Per", "RZ_UNK_Per")
wd$MAX_POS<-apply(wd[,RZ_NAMES],1,which.max)
RZONES<-c("FRF", "BRF", "LAG", "RCF", "PRS", "LND", "UNK")
wd$ZONE_CODE<-as.factor(wd$MAX_POS)
levels(wd$ZONE_CODE)<-RZONES[sort(unique(wd$MAX_POS))]
table(wd$ZONE_CODE, wd$MAX_POS)
wd$MAX_POS<-NULL
}
GRIDFILES<-read.csv("X:/GIS/Projects/CommonMaps/MARI/GUA/gua_50m_grid_for_script.csv")
INDEX<-1
gridf<-GRIDFILES[INDEX]
View(gridf)
orig.wd<-read.csv("X:/GIS/Projects/CommonMaps/MARI/GUA/gua_50m_grid_for_script.csv")
RZ_NAMES<-c("RZ_FRF_Per", "RZ_BRF_Per", "RZ_LAG_Per", "RZ_RCF_Per", "RZ_PRS_Per", "RZ_LND_Per", "RZ_UNK_Per")
wd$MAX_POS<-apply(wd[,RZ_NAMES],1,which.max)
RZONES<-c("FRF", "BRF", "LAG", "RCF", "PRS", "LND", "UNK")
wd$ZONE_CODE<-as.factor(wd$MAX_POS)
levels(wd$ZONE_CODE)<-RZONES[sort(unique(wd$MAX_POS))]
table(wd$ZONE_CODE, wd$MAX_POS)
wd$MAX_POS<-NULL
head(wd)
wd$LND<-0
if("Land_Per" %in% colnames(wd)){
wd$LND<-wd$Land_Per
} else {
wd$LND<-wd$RZ_LND_Per
}
if(max(wd$LND)>50){
##Set anything to Land if Land_Per is > 50%
wd[which(wd$LND>50),]$DEPTH_BIN<-"LAND"
wd[which(wd$LND>50),]$HARD_10<-"L"
wd[which(wd$LND>50),]$HARD_50<-"L"
wd[which(wd$LND>50),]$ZONE_CODE<-"LND"
}
wd$LND<-NULL
wd.out<-merge(orig.wd, wd[,c("OBJECTID", "DEPTH_BIN", "HARD_10", "HARD_50", "ZONE_CODE")], by="OBJECTID", all.x=T)
colnames(wd)
wd<-write.csv("X:/GIS/Projects/CommonMaps/MARI/GUA/KSM_gua_50_grid_table.csv")
wd<-write.csv(wd,file="X:/GIS/Projects/CommonMaps/MARI/GUA/KSM_gua_50_grid_table.csv")
wd<-read.csv("X:/GIS/Projects/CommonMaps/MARI/GUA/gua_50m_grid_for_script.csv")
head(wd)
summary(wd)
# create a field for depth bin
wd$DEPTH_BIN<-"MISSING"
wd[is.na(wd$Bty_Mean),]$DEPTH_BIN<-"UNKN"
# label depth ranges on mean bathy value
wd[which(wd$Bty_Mean > -1),]$DEPTH_BIN<-"ONEM" # not samplable
wd[which(wd$Bty_Mean >= -6 & wd$Bty_Mean < -1),]$DEPTH_BIN<-"SHAL"
wd[which(wd$Bty_Mean >= -18 & wd$Bty_Mean < -6),]$DEPTH_BIN<-"MIDD"
wd[which(wd$Bty_Mean >= -30 & wd$Bty_Mean < -18),]$DEPTH_BIN<-"DEEP"
wd[which(wd$Bty_Mean < -30),]$DEPTH_BIN<-"MESO"
# not all grids have this, but some have values of 1
wd[which(wd$Bty_Mean >= 0),]$DEPTH_BIN<-"LAND"
table(wd$DEPTH_BIN, wd$Hard_Per)
if("Hard_Per" %in% colnames(wd)){
#Change hard and soft and unknown per to be proportion of not land
if("Hard_Per" %in% colnames(wd)){
nl<-which(wd$Land_Per<100)
wd$NOT_LAND<-(100-wd$Land_Per)/100
wd[nl, c("Hard_Per", "Unk_Per", "Soft_Per")]<-wd[nl, c("Hard_Per", "Unk_Per", "Soft_Per")]/wd[nl, ]$NOT_LAND
}
# create fields for hard soft
wd$HARD_50<-wd$HARD_10<-"MISSING"
## HARD_1O set to "H" if hard >= 10%, otherwise set to whatever is higher of soft or unknown
table(wd$Hard_Per)
h<-which(wd$Hard_Per>=10); 	if (length(h)>0)	 	wd[h,]$HARD_10<-"H"
s<-which(wd$HARD_10=="MISSING" & wd$Soft_Per>=wd$Unk_Per); 	if (length(s)>0)		 	wd[s,]$HARD_10<-"S"
u<-which(wd$HARD_10=="MISSING" & wd$Unk_Per>wd$Soft_Per); 	if (length(u)>0)	 		wd[u,]$HARD_10<-"U"
table(wd$HARD_10)
## HARD_50 sets to Unknown if > 50% Unkown .. otherwise set to majority of hard/soft
u<-which(wd$Unk_Per>50); 	if (length(u)>0)	 	wd[u,]$HARD_50<-"U"
s<-which(wd$HARD_50=="MISSING" & wd$Soft_Per>wd$Hard_Per); 	if (length(s)>0)	 	wd[s,]$HARD_50<-"S"
h<-which(wd$HARD_50=="MISSING" & wd$Hard_Per>=wd$Soft_Per); 	if (length(h)>0)	 	wd[h,]$HARD_50<-"H"
table(wd$HARD_50)
} else {
# No hard/soft information
wd$HARD_10<-wd$HARD_50<-"U"
}
# add reef zone field - whatever is largest
# if(INDEX %in% c(101, 108, 109, 110)){
# 	wd$ZONE_CODE<-"FRF"
# } else {
RZ_NAMES<-c("RZ_FRF_Per", "RZ_BRF_Per", "RZ_LAG_Per", "RZ_RCF_Per", "RZ_PRS_Per", "RZ_LND_Per", "RZ_UNK_Per")
wd$MAX_POS<-apply(wd[,RZ_NAMES],1,which.max)
RZONES<-c("FRF", "BRF", "LAG", "RCF", "PRS", "LND", "UNK")
wd$ZONE_CODE<-as.factor(wd$MAX_POS)
levels(wd$ZONE_CODE)<-RZONES[sort(unique(wd$MAX_POS))]
table(wd$ZONE_CODE, wd$MAX_POS)
wd$MAX_POS<-NULL
# }
#set all grid cells with >50% LND to LAND
#first create a column for Land% - from the 2 fields that might be in the datafile
wd$LND<-0
if("Land_Per" %in% colnames(wd)){
wd$LND<-wd$Land_Per
} else {
wd$LND<-wd$RZ_LND_Per
}
if(max(wd$LND)>50){
##Set anything to Land if Land_Per is > 50%
wd[which(wd$LND>50),]$DEPTH_BIN<-"LAND"
wd[which(wd$LND>50),]$HARD_10<-"L"
wd[which(wd$LND>50),]$HARD_50<-"L"
wd[which(wd$LND>50),]$ZONE_CODE<-"LND"
}
wd$LND<-NULL
#save guam
write.csv(wd,file="X:/GIS/Projects/CommonMaps/MARI/GUA/KSM_gua_50_grid_table.csv")
unk<-read.csv("D:/CRED/GIS/common_maps/GUAM/reefzones/GUA_unk_depth_filled.csv")
wd<-read.csv("X:/GIS/Projects/CommonMaps/MARI/GUA/KSM_gua_50_grid_table.csv")
colnames(wd)
colnames(unk)
unkn<-unk[,c("ID_50m","ZONE_CODE")]
wd1<-wd[,c("FID","ID_50m","ID_200m","MidPt_Lat","MidPt_Long,Bty_Src",
"Bty_Min","Bty_Max","Bty_Mean","Bty_Std","Bty_Cnt","Hard_Per","Soft_Per",
"Land_Per","Other_Per","Unk_Per","HS_Src","RZ_FRF_Per", "RZ_BRF_Per" ,"RZ_LAG_Per","RZ_RCF_Per", "RZ_PRS_Per" ,"RZ_LND_Per", "RZ_UNK_Per", "SEC_NAME" ,  "DEPTH_BIN" , "NOT_LAND", "HARD_10","HARD_50" )]
colnames(wd)
wd1<-wd[,c("FID","ID_50m","ID_200m","MidPt_Lat","MidPt_Long,Bty_Src","Bty_Min","Bty_Max","Bty_Mean","Bty_Std","Bty_Cnt","Hard_Per","Soft_Per","Land_Per","Other_Per","Unk_Per","HS_Src","RZ_FRF_Per", "RZ_BRF_Per" ,"RZ_LAG_Per","RZ_RCF_Per", "RZ_PRS_Per" ,"RZ_LND_Per", "RZ_UNK_Per", "SEC_NAME" ,  "DEPTH_BIN" , "NOT_LAND", "HARD_10","HARD_50")]
wd1<-wd[,c("FID","ID_50m","ID_200m","MidPt_Lat","MidPt_Long","Bty_Src","Bty_Min","Bty_Max","Bty_Mean","Bty_Std","Bty_Cnt","Hard_Per","Soft_Per","Land_Per","Other_Per","Unk_Per","HS_Src","RZ_FRF_Per", "RZ_BRF_Per" ,"RZ_LAG_Per","RZ_RCF_Per", "RZ_PRS_Per" ,"RZ_LND_Per", "RZ_UNK_Per", "SEC_NAME" ,  "DEPTH_BIN" , "NOT_LAND", "HARD_10","HARD_50")]
unique(wd$DEPTH_BIN)
rm(list=ls(all=TRUE))
wd<-read.csv("D:/CRED/GIS/common_maps/GUAM/reefzones/gua_grids_50m_table_join2_table.csv")
head(wd)
summary(wd)
wd$DEPTH_BIN<-"MISSING"
wd[is.na(wd$Bty_Mean),]$DEPTH_BIN<-"UNKN"
wd[which(wd$Bty_Mean > -1),]$DEPTH_BIN<-"ONEM" # not samplable
wd[which(wd$Bty_Mean >= -6 & wd$Bty_Mean < -1),]$DEPTH_BIN<-"SHAL"
wd[which(wd$Bty_Mean >= -18 & wd$Bty_Mean < -6),]$DEPTH_BIN<-"MIDD"
wd[which(wd$Bty_Mean >= -30 & wd$Bty_Mean < -18),]$DEPTH_BIN<-"DEEP"
wd[which(wd$Bty_Mean < -30),]$DEPTH_BIN<-"MESO"
wd[which(wd$Bty_Mean >= 0),]$DEPTH_BIN<-"LAND"
table(wd$DEPTH_BIN, wd$Hard_Per)
if("Hard_Per" %in% colnames(wd)){
nl<-which(wd$Land_Per<100)
wd$NOT_LAND<-(100-wd$Land_Per)/100
wd[nl, c("Hard_Per", "Unk_Per", "Soft_Per")]<-wd[nl, c("Hard_Per", "Unk_Per", "Soft_Per")]/wd[nl, ]$NOT_LAND
}
wd$HARD_50<-wd$HARD_10<-"MISSING"
h<-which(wd$Hard_Per>=10); 	if (length(h)>0)	 	wd[h,]$HARD_10<-"H"
s<-which(wd$HARD_10=="MISSING" & wd$Soft_Per>=wd$Unk_Per); 	if (length(s)>0)		 	wd[s,]$HARD_10<-"S"
u<-which(wd$HARD_10=="MISSING" & wd$Unk_Per>wd$Soft_Per); 	if (length(u)>0)	 		wd[u,]$HARD_10<-"U"
table(wd$HARD_10)
u<-which(wd$Unk_Per>50); 	if (length(u)>0)	 	wd[u,]$HARD_50<-"U"
s<-which(wd$HARD_50=="MISSING" & wd$Soft_Per>wd$Hard_Per); 	if (length(s)>0)	 	wd[s,]$HARD_50<-"S"
h<-which(wd$HARD_50=="MISSING" & wd$Hard_Per>=wd$Soft_Per); 	if (length(h)>0)	 	wd[h,]$HARD_50<-"H"
table(wd$HARD_50)
} else {
rm(list=ls(all=TRUE))
GRIDFILES<-read.csv("D:/CRED/GIS/common_maps/GUAM/reefzones/gua_grids_50m_table_join2_table.csv")
INDEX<-4
gridf<-GRIDFILES[INDEX]
wd<-orig.wd<-read.csv(gridf)
head(wd)
summary(wd)
View(gridf)
rm(list=ls(all=TRUE))
wd<-read.csv("D:/CRED/GIS/common_maps/GUAM/reefzones/gua_grids_50m_table_join2_table.csv")
wd$DEPTH_BIN<-"MISSING"
wd[is.na(wd$Bty_Mean),]$DEPTH_BIN<-"UNKN"
# label depth ranges on mean bathy value
wd[which(wd$Bty_Mean > -1),]$DEPTH_BIN<-"ONEM" # not samplable
wd[which(wd$Bty_Mean >= -6 & wd$Bty_Mean < -1),]$DEPTH_BIN<-"SHAL"
wd[which(wd$Bty_Mean >= -18 & wd$Bty_Mean < -6),]$DEPTH_BIN<-"MIDD"
wd[which(wd$Bty_Mean >= -30 & wd$Bty_Mean < -18),]$DEPTH_BIN<-"DEEP"
wd[which(wd$Bty_Mean < -30),]$DEPTH_BIN<-"MESO"
# not all grids have this, but some have values of 1
#wd[which(wd$Bty_Mean >= 0),]$DEPTH_BIN<-"LAND"    #Possibly set to SHAL! (as default) .. as these are right next to land!
table(wd$DEPTH_BIN, wd$Hard_Per)
if("Hard_Per" %in% colnames(wd)){
#Change hard and soft and unknown per to be proportion of not land
if("Hard_Per" %in% colnames(wd)){
nl<-which(wd$Land_Per<100)
wd$NOT_LAND<-(100-wd$Land_Per)/100
wd[nl, c("Hard_Per", "Unk_Per", "Soft_Per")]<-wd[nl, c("Hard_Per", "Unk_Per", "Soft_Per")]/wd[nl, ]$NOT_LAND
}
# create fields for hard soft
wd$HARD_50<-wd$HARD_10<-"MISSING"
## HARD_1O set to "H" if hard >= 10%, otherwise set to whatever is higher of soft or unknown
table(wd$Hard_Per)
h<-which(wd$Hard_Per>=10); 	if (length(h)>0)	 	wd[h,]$HARD_10<-"H"
s<-which(wd$HARD_10=="MISSING" & wd$Soft_Per>=wd$Unk_Per); 	if (length(s)>0)		 	wd[s,]$HARD_10<-"S"
u<-which(wd$HARD_10=="MISSING" & wd$Unk_Per>wd$Soft_Per); 	if (length(u)>0)	 		wd[u,]$HARD_10<-"U"
table(wd$HARD_10)
## HARD_50 sets to Unknown if > 50% Unkown .. otherwise set to majority of hard/soft
u<-which(wd$Unk_Per>50); 	if (length(u)>0)	 	wd[u,]$HARD_50<-"U"
s<-which(wd$HARD_50=="MISSING" & wd$Soft_Per>wd$Hard_Per); 	if (length(s)>0)	 	wd[s,]$HARD_50<-"S"
h<-which(wd$HARD_50=="MISSING" & wd$Hard_Per>=wd$Soft_Per); 	if (length(h)>0)	 	wd[h,]$HARD_50<-"H"
table(wd$HARD_50)
} else {
# No hard/soft information
wd$HARD_10<-wd$HARD_50<-"U"
}
wd$ZONE_CODE<-"FRF"   #Default
RZ_NAMES<-c("RZ_FRF_Per", "RZ_BRF_Per", "RZ_LAG_Per", "RZ_RCF_Per", "RZ_PRS_Per", "RZ_UNK_Per")
wd$MAX_POS<-apply(wd[,RZ_NAMES],1,which.max)
RZONES<-c("FRF", "BRF", "LAG", "RCF", "PRS", "UNK")
wd$ZONE_CODE<-as.factor(wd$MAX_POS)
levels(wd$ZONE_CODE)<-RZONES[sort(unique(wd$MAX_POS))]
wd$MAX_POS<-NULL
wd$LND<-0
if("Land_Per" %in% colnames(wd)){
wd$LND<-wd$Land_Per
} else {
wd$LND<-wd$RZ_LND_Per
}
if(max(wd$LND)>50){
##Set anything to Land if Land_Per is > 50%
wd[which(wd$LND>50),]$DEPTH_BIN<-"LAND"
wd[which(wd$LND>50),]$HARD_10<-"L"
wd[which(wd$LND>50),]$HARD_50<-"L"
levels(wd$ZONE_CODE)<-c(levels(wd$ZONE_CODE), "LND")
wd[which(wd$LND>50),]$ZONE_CODE<-"LND"
wd[which(wd$LND>50),]$DEPTH_BIN<-"LAND"
}
wd$LND<-NULL
}
wd$LND<-NULL
wd.out<-merge(orig.wd, wd[,c("FID", "DEPTH_BIN", "HARD_10", "HARD_50", "ZONE_CODE")], by="FID", all.x=T)  #was previously joining on OBJECTID
wd$LND<-NULL
wd.out<-merge(orig.wd, wd[,c("FID", "DEPTH_BIN", "HARD_10", "HARD_50", "ZONE_CODE")], by="FID", all.x=T)  #was previously joining on OBJECTID
colnames(wd)
gua<-read.csv("D:/CRED/GIS/common_maps/GUAM/reefzones/gua_grids_50m_table_join2_table.csv")
wd.out<-merge(gua, wd[,c("FID", "DEPTH_BIN", "HARD_10", "HARD_50", "ZONE_CODE")], by="FID", all.x=T)  #was previously joining on OBJECTID
wd.out<-merge(gua,wd[,c("FID", "DEPTH_BIN", "HARD_10", "HARD_50", "ZONE_CODE")], by="FID", all.x=T)  #was previously joining on OBJECTID
rm(list=ls(all=TRUE))
gua<-read.csv("D:/CRED/GIS/common_maps/GUAM/reefzones/gua_grids_50m_table_join2_table.csv")
wd<-gua
wd$DEPTH_BIN<-"MISSING"
wd[is.na(wd$Bty_Mean),]$DEPTH_BIN<-"UNKN"
# label depth ranges on mean bathy value
wd[which(wd$Bty_Mean > -1),]$DEPTH_BIN<-"ONEM" # not samplable
wd[which(wd$Bty_Mean >= -6 & wd$Bty_Mean < -1),]$DEPTH_BIN<-"SHAL"
wd[which(wd$Bty_Mean >= -18 & wd$Bty_Mean < -6),]$DEPTH_BIN<-"MIDD"
wd[which(wd$Bty_Mean >= -30 & wd$Bty_Mean < -18),]$DEPTH_BIN<-"DEEP"
wd[which(wd$Bty_Mean < -30),]$DEPTH_BIN<-"MESO"
# not all grids have this, but some have values of 1
#wd[which(wd$Bty_Mean >= 0),]$DEPTH_BIN<-"LAND"    #Possibly set to SHAL! (as default) .. as these are right next to land!
table(wd$DEPTH_BIN, wd$Hard_Per)
if("Hard_Per" %in% colnames(wd)){
#Change hard and soft and unknown per to be proportion of not land
if("Hard_Per" %in% colnames(wd)){
nl<-which(wd$Land_Per<100)
wd$NOT_LAND<-(100-wd$Land_Per)/100
wd[nl, c("Hard_Per", "Unk_Per", "Soft_Per")]<-wd[nl, c("Hard_Per", "Unk_Per", "Soft_Per")]/wd[nl, ]$NOT_LAND
}
# create fields for hard soft
wd$HARD_50<-wd$HARD_10<-"MISSING"
## HARD_1O set to "H" if hard >= 10%, otherwise set to whatever is higher of soft or unknown
table(wd$Hard_Per)
h<-which(wd$Hard_Per>=10); 	if (length(h)>0)	 	wd[h,]$HARD_10<-"H"
s<-which(wd$HARD_10=="MISSING" & wd$Soft_Per>=wd$Unk_Per); 	if (length(s)>0)		 	wd[s,]$HARD_10<-"S"
u<-which(wd$HARD_10=="MISSING" & wd$Unk_Per>wd$Soft_Per); 	if (length(u)>0)	 		wd[u,]$HARD_10<-"U"
table(wd$HARD_10)
## HARD_50 sets to Unknown if > 50% Unkown .. otherwise set to majority of hard/soft
u<-which(wd$Unk_Per>50); 	if (length(u)>0)	 	wd[u,]$HARD_50<-"U"
s<-which(wd$HARD_50=="MISSING" & wd$Soft_Per>wd$Hard_Per); 	if (length(s)>0)	 	wd[s,]$HARD_50<-"S"
h<-which(wd$HARD_50=="MISSING" & wd$Hard_Per>=wd$Soft_Per); 	if (length(h)>0)	 	wd[h,]$HARD_50<-"H"
table(wd$HARD_50)
} else {
# No hard/soft information
wd$HARD_10<-wd$HARD_50<-"U"
}
RZ_NAMES<-c("RZ_FRF_Per", "RZ_BRF_Per", "RZ_LAG_Per", "RZ_RCF_Per", "RZ_PRS_Per", "RZ_UNK_Per")
wd$MAX_POS<-apply(wd[,RZ_NAMES],1,which.max)
RZONES<-c("FRF", "BRF", "LAG", "RCF", "PRS", "UNK")
wd$ZONE_CODE<-as.factor(wd$MAX_POS)
levels(wd$ZONE_CODE)<-RZONES[sort(unique(wd$MAX_POS))]
#	table(wd$ZONE_CODE, wd$MAX_POS)
wd$MAX_POS<-NULL
wd$LND<-0
if("Land_Per" %in% colnames(wd)){
wd$LND<-wd$Land_Per
} else {
wd$LND<-wd$RZ_LND_Per
}
if(max(wd$LND)>50){
##Set anything to Land if Land_Per is > 50%
wd[which(wd$LND>50),]$DEPTH_BIN<-"LAND"
wd[which(wd$LND>50),]$HARD_10<-"L"
wd[which(wd$LND>50),]$HARD_50<-"L"
levels(wd$ZONE_CODE)<-c(levels(wd$ZONE_CODE), "LND")
wd[which(wd$LND>50),]$ZONE_CODE<-"LND"
wd[which(wd$LND>50),]$DEPTH_BIN<-"LAND"
}
wd$LND<-NULL
wd.out<-merge(gua,wd[,c("FID", "DEPTH_BIN", "HARD_10", "HARD_50", "ZONE_CODE")], by="FID", all.x=T)  #was previously joining on OBJECTID
colnames(gua)
colnames(wd)
wd.out<-merge(gua,wd[,c("ID_50m", "DEPTH_BIN", "HARD_10", "HARD_50", "ZONE_CODE")], by="ID_50m", all.x=T)  #was previously joining on OBJECTID
write.csv(wd.out,file="X:/GIS/Projects/CommonMaps/MARI/GUA/KSM_gua_50_grid_table.csv")
unkn<-unk[,c("ID_50m","ZONE_CODE")]
unk<-read.csv("D:/CRED/GIS/common_maps/GUAM/reefzones/GUA_unk_depth_filled.csv")
colnames(unk)
unkn<-unk[,c("ID_50m","ZONE_CODE")]
wd1<-wd2[,c("FID","ID_50m","ID_200m","MidPt_Lat","MidPt_Long","Bty_Src","Bty_Min","Bty_Max","Bty_Mean","Bty_Std","Bty_Cnt","Hard_Per","Soft_Per","Land_Per","Other_Per","Unk_Per","HS_Src","RZ_FRF_Per", "RZ_BRF_Per" ,"RZ_LAG_Per","RZ_RCF_Per", "RZ_PRS_Per" ,"RZ_LND_Per", "RZ_UNK_Per", "SEC_NAME" ,  "DEPTH_BIN" , "NOT_LAND", "HARD_10","HARD_50")]
wd2<-wd.out
wd1<-wd2[,c("FID","ID_50m","ID_200m","MidPt_Lat","MidPt_Long","Bty_Src","Bty_Min","Bty_Max","Bty_Mean","Bty_Std","Bty_Cnt","Hard_Per","Soft_Per","Land_Per","Other_Per","Unk_Per","HS_Src","RZ_FRF_Per", "RZ_BRF_Per" ,"RZ_LAG_Per","RZ_RCF_Per", "RZ_PRS_Per" ,"RZ_LND_Per", "RZ_UNK_Per", "SEC_NAME" ,  "DEPTH_BIN" , "NOT_LAND", "HARD_10","HARD_50")]
wd1<-wd2[,c("ID_50m","ID_200m","MidPt_Lat","MidPt_Long","Bty_Src","Bty_Min","Bty_Max","Bty_Mean","Bty_Std","Bty_Cnt","Hard_Per","Soft_Per","Land_Per","Other_Per","Unk_Per","HS_Src","RZ_FRF_Per", "RZ_BRF_Per" ,"RZ_LAG_Per","RZ_RCF_Per", "RZ_PRS_Per" ,"RZ_LND_Per", "RZ_UNK_Per", "SEC_NAME" ,  "DEPTH_BIN" , "NOT_LAND", "HARD_10","HARD_50")]
colnames(wd2)
wd1<-wd2[,c("ID_50m","OBJECTID","ID_200m","MidPt_Lat","MidPt_Long","Bty_Src","Bty_Min","Bty_Max","Bty_Mean","Bty_Std","Bty_Cnt","Hard_Per","Soft_Per","Land_Per","Other_Per","Unk_Per","HS_Src","RZ_FRF_Per", "RZ_BRF_Per","RZ_LAG_Per","RZ_RCF_Per","RZ_PRS_Per","RZ_LND_Per","RZ_UNK_Per","SEC_NAME","Shape_Length", "Shape_Area"  , "DEPTH_BIN"   , "HARD_10"   ,   "HARD_50")]
ggrid<-merge(wd1,unk,by="ID_50m",all.x=T)
ggrid<-merge(wd1,unkn,by="ID_50m",all.x=T)
head(ggrid)
unique(ggrid$DEPTH_BIN)
summary(ggrid)
unique(unk$DEPTH_BIN)
wd1<-wd2[,c("ID_50m","OBJECTID","ID_200m","MidPt_Lat","MidPt_Long","Bty_Src","Bty_Min","Bty_Max","Bty_Mean","Bty_Std","Bty_Cnt","Hard_Per","Soft_Per","Land_Per","Other_Per","Unk_Per","HS_Src","RZ_FRF_Per", "RZ_BRF_Per","RZ_LAG_Per","RZ_RCF_Per","RZ_PRS_Per","RZ_LND_Per","RZ_UNK_Per","SEC_NAME","Shape_Length", "Shape_Area"  , "HARD_10"   ,   "HARD_50","ZONE_CODE")]
ggrid<-merge(wd1,unkn,by="ID_50m",all.x=T)
head(ggrid)
unkn<-unk[,c("ID_50m","DEPTH_BIN")]
wd1<-wd2[,c("ID_50m","OBJECTID","ID_200m","MidPt_Lat","MidPt_Long","Bty_Src","Bty_Min","Bty_Max","Bty_Mean","Bty_Std","Bty_Cnt","Hard_Per","Soft_Per","Land_Per","Other_Per","Unk_Per","HS_Src","RZ_FRF_Per", "RZ_BRF_Per","RZ_LAG_Per","RZ_RCF_Per","RZ_PRS_Per","RZ_LND_Per","RZ_UNK_Per","SEC_NAME","Shape_Length", "Shape_Area"  , "HARD_10"   ,   "HARD_50","ZONE_CODE")]
ggrid<-merge(wd1,unkn,by="ID_50m",all.x=T)
head(ggrid)
unique(ggrid$DEPTH_BIN)
write.csv(wd.out,file="X:/GIS/Projects/CommonMaps/MARI/GUA/KSM_gua_50_grid_table.csv")
write.csv(wd.out,file="D:/CRED/GIS/common_maps/GUAM/reefzones/KSM_gua_50_grid_table.csv")
write.csv(ggrid, file="D:/CRED/GIS/common_maps/GUAM/reefzones/NEW_gua_unk_depth_bin_filled.csv")
setwd("D:/CRED/fish_team_R/fish-paste/lib")
source("fish_team_functions.R")
source("Islandwide Mean&Variance Functions.R")
#source("D:/CRED/fish_team_R/R/diver_v_diver4.R")
setwd("D:/CRED/fish_cruise_routine_report/monitoring_report/2018_status_report/data/Data Outputs")
library(reshape)
load("raw_working_data.rdata")
unique(wd$FAMILY)
FISH_SPECIES_FIELDS<-c("SPECIES","TAXONNAME", "FAMILY", "COMMONFAMILYALL", "TROPHIC_MONREP", "LW_A", "LW_B", "LENGTH_CONVERSION_FACTOR")
species_table<-Aggregate_InputTable(wd, FISH_SPECIES_FIELDS)
setwd("D:/CRED/fish_team_R/fish-paste/lib")
source("fish_team_functions.R")
source("Islandwide Mean&Variance Functions.R")
